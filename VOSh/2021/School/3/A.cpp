#include <iostream>
using namespace std;

/*
https://codeforces.com/gym/103382/problem/1

1) Перейдем к 0-индексации
2) Лемма: если в каждом купе N мест, то места i-ого купе находятся в полуинтервале [n * i; n * i + k)
2) Для основных мест N = 4, поэтому выведем места [4 * room; 4 * room + 4)
3) Вычтем из номера дополнительных мест 45 для удобства поиска (чтобы номера начинались аналогично с 0)
4) Также обратим внимание, что доп. места нумеруются в обратном порядке относительно номеров купе,
   поэтому зададим обратную нумерацию: i-е купе - номер 10 - i
5) Так как для дополнительных мест N = 2, то получаем итоговую формулу полуинтервала
   [45 + 2 * (10 - room); 45 + 2 * (10 - room) + 2)
*/
int main() {
	int room;
	cin >> room; // [1; 11]
	--room; // [0; 10]

	for (int place = 0; place < 4; ++place) {
		cout << place + 4 * room + 1 << "\n";
	}

	// 45 <= place ->
	for (int place = 0; place < 2; ++place) {
		cout << place + (10 - room) * 2 + 45 << "\n";
	}

	return 0;
}
